@using System.Globalization
@using JobPortal.Models
@model JobPortal.Models.JobInfo
@*@model IEnumerable<JobPortal.Models.JobInfo>*@

@{
    ViewBag.Title = "Posted Jobs";

    dynamic employer = Session["user"] as Employer;
    dynamic seeker = Session["user"] as Seeker;

    
    
    dynamic jobInfoList = ViewBag.jobList;
}

<h3>All Posted Jobs</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="padding-bottom: 10px">

        <hr />
        @Html.ValidationSummary(true)

        <table >

            <tr>
                <th>From Time</th>
                <th>To Time</th>
                <th></th>
            </tr>
            <tr>
                <td>@Html.TextBoxFor(model => model.From, new { @class = "form-control", id = "date-picker1" })</td>
                <td>@Html.TextBoxFor(model => model.To, new { @class = "form-control", id = "date-picker2" })</td>
                <td><input type="submit" value="View Jobs" class="btn btn-default"/></td>
                <td>@Html.ActionLink("View All Jobs", "ViewAllPostedJobs", "Job")</td>
            </tr>
            <tr>
                <td>@Html.ValidationMessageFor(model => model.From)</td>
                <td>@Html.ValidationMessageFor(model => model.To)</td>
                <td></td>
            </tr>

        </table>

       
    </div>
}

<table id="myTable" class="display" >
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.CompanyName)</th>
            <th>@Html.DisplayNameFor(model => model.JobTitle)</th>
            <th>@Html.DisplayNameFor(model => model.EducationalRequirements)</th>
            <th>@Html.DisplayNameFor(model => model.ExperienceRequirements)</th>
            <th>@Html.DisplayNameFor(model => model.PublishTime)</th>
            <th>@Html.DisplayNameFor(model => model.ApplicationDeadline)</th>
            <th></th>
        </tr>
    </thead>

    <tfoot>
        <tr>
            <th>@Html.DisplayNameFor(model => model.CompanyName)</th>
            <th>@Html.DisplayNameFor(model => model.JobTitle)</th>
            <th>@Html.DisplayNameFor(model => model.EducationalRequirements)</th>
            <th>@Html.DisplayNameFor(model => model.ExperienceRequirements)</th>
            <th>@Html.DisplayNameFor(model => model.PublishTime)</th>
            <th>@Html.DisplayNameFor(model => model.ApplicationDeadline)</th>
            <th></th>
        </tr>
    </tfoot>

    <tbody>
        @foreach (var item in jobInfoList)
        {
            <tr>
                <td>@item.CompanyName</td>
                <td>@item.JobTitle</td>
                <td>@item.EducationalRequirements</td>
                <td>@item.ExperienceRequirements</td>
                <td>@item.PublishTime.ToString("dd/M/yyyy", CultureInfo.InvariantCulture)</td>
                <td>@item.ApplicationDeadline.ToString("dd/M/yyyy", CultureInfo.InvariantCulture)</td>
                
                @if (seeker != null)
                {
                    <td>
                        @Html.ActionLink("Details", "ViewDetailPostedJobs", new { id = item.JobID }) |
                        @Html.ActionLink("Apply", "ApplyJob", new {id = item.JobID}) 
                    </td>
                }
                else if (employer != null)
                {
                    <td>
                        @Html.ActionLink("Details", "ViewDetailPostedJobs", new { id = item.JobID })
                    </td>
                }
                else
                {
                    <td>
                        @Html.ActionLink("Details", "ViewDetailPostedJobs", new { id = item.JobID }) |
                        @Html.ActionLink("Apply", "ApplyJob", new { id = item.JobID })
                    </td>
                }

            </tr>
        }


    </tbody>
</table>


<p>
    @Html.ActionLink("Create New", "EmployerJobPost", "Job")
</p>

<p>
    @Html.ActionLink("Back to Home", "Index", "Home")
</p>

<style>
    
    th {
        text-align: center;
    }
     td {
         padding-right: 15px;
     }
</style>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    
    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    
    <script type="text/javascript">
        $(document)
            .ready(function () {
                $('#myTable').DataTable({ responsive: true });

            });

        $(function () {
            $('#date-picker1')
                .datepicker(
                    {
                        dateFormat: "dd/M/yy",
                        changeMonth: true,
                        changeYear: true,
                        yearRange: "-10:+10"
                    }
                );
        });

        $(function () {
            $('#date-picker2')
                .datepicker(
                    {
                        dateFormat: "dd/M/yy",
                        changeMonth: true,
                        changeYear: true,
                        yearRange: "-10:+10"
                    }
                );
        });
    </script>


}


<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery-3.1.0.min.js"></script>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

